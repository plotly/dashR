version: 2

jobs:


  "test": &test-template
    working_directory: ~/dashr
    docker:
      - image: byronz/dashr:ci
        environment:
          PERCY_PARALLEL_TOTAL: '-1'
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'True'

    steps:
      - checkout

      - run:
          name: ℹ️ CI Context
          command: |
            echo "TRIGGERER: ${CIRCLE_USERNAME}"
            echo "BUILD_NUMBER: ${CIRCLE_BUILD_NUM}"
            echo "BUILD_URL: ${CIRCLE_BUILD_URL}"
            echo "BRANCH: ${CIRCLE_BRANCH}"
            echo "RUNNING JOB: ${CIRCLE_JOB}"
            echo "JOB PARALLELISM: ${CIRCLE_NODE_TOTAL}"
            echo "CIRCLE_REPOSITORY_URL: ${CIRCLE_REPOSITORY_URL}"
            echo $CIRCLE_JOB > circlejob.txt
            git rev-parse HEAD | tr -d '\n' > commit.txt

      - run:
          name: 🚧 install R dependencies
          command: |
              sudo Rscript -e 'commit_hash <- readChar("commit.txt", file.info("commit.txt")$size); message("Preparing to install plotly/dashR ", commit_hash, " ..."); install.packages("remotes"); remotes::install_github("plotly/dashR", upgrade=TRUE, ref=commit_hash, force=TRUE)'

      - run:
          name: ⚙️  Integration tests
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -e git+https://github.com/plotly/dash.git#egg=dash[testing]
            export PATH=$PATH:/home/circleci/.local/bin/
            pytest --log-cli-level DEBUG --nopercyfinalize --junitxml=test-reports/dashr.xml tests/integration/
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: /tmp/dash_artifacts

      - run:
          name: 🦔 percy finalize
          command: npx percy finalize --all
          when: always

      - run:
          name: 🔎 Unit tests
          command: |
              sudo Rscript -e 'testthat::test_dir("tests/")'

workflows:
  version: 2
  build:
    jobs:
      - "test"
