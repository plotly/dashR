{"version":3,"sources":["webpack://dash_table/./src/third-party/highlight.js","webpack://dash_table/./node_modules/highlight.js/lib/core.js","webpack://dash_table/./node_modules/highlight.js/styles/github.css?d6b7","webpack://dash_table/./node_modules/highlight.js/styles/github.css","webpack://dash_table/./node_modules/highlight.js/lib/languages/bash.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/css.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/http.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/javascript.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/json.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/julia.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/markdown.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/plaintext.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/python.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/r.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/ruby.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/shell.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/sql.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/xml.js","webpack://dash_table/./node_modules/highlight.js/lib/languages/yaml.js"],"names":["highlightjs","registerLanguage","bash","css","http","javascript","json","julia","markdown","plaintext","python","r","ruby","shell","sql","xml","yaml","deepFreeze","obj","Object","freeze","objIsFunction","getOwnPropertyNames","forEach","prop","hasOwnProperty","call","isFrozen","Response","mode","undefined","data","this","ignore","escapeHTML","value","replace","inherit","original","result","key","objects","tag","node","nodeName","toLowerCase","utils","__proto__","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeType","nodeValue","length","push","event","match","mergeStreams","highlighted","processed","nodeStack","selectStream","open","map","attributes","attr","join","close","render","stream","substring","reverse","splice","pop","substr","emitsWrappingTags","kind","HTMLRenderer","parseTree","options","buffer","classPrefix","walk","text","className","sublanguage","span","TokenTreeEmitter","openNode","addText","closeNode","add","emitter","name","root","rootNode","children","stack","top","JSON","stringify","builder","constructor","_walk","every","el","TokenTree","_collapse","source","re","concat","args","joined","x","C_NUMBER_RE","BACKSLASH_ESCAPE","begin","relevance","APOS_STRING_MODE","end","illegal","contains","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","modeOptions","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","NUMBER_RE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","MODES","IDENT_RE","UNDERSCORE_IDENT_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","SHEBANG","opts","beginShebang","binary","m","resp","index","ignoreMatch","END_SAME_AS_BEGIN","assign","_beginMatch","COMMON_KEYWORDS","split","compileLanguage","language","langRe","global","RegExp","case_insensitive","MultiRegex","matchIndexes","regexes","matchAt","position","toString","exec","countMatchGroups","terminators","matcherRe","regexps","separator","backreferenceRe","numCaptures","ret","i","String","Number","lastIndex","s","findIndex","matchData","ResumableMultiRegex","rules","multiRegexes","count","regexIndex","matcher","slice","addRule","compile","type","getMatcher","resumingScanAtSamePosition","m2","considerAll","skipIfhasPrecedingOrTrailingDot","response","before","input","after","includes","Error","compileMode","parent","cmode","compiled","__beforeBegin","keywords","beginKeywords","keywordPattern","$pattern","rawKeywords","caseInsensitive","compiledKeywords","splitAndCompile","keys","keywordList","keyword","pair","scoreForKeyword","compileKeywords","lexemes","keywordPatternRe","beginRe","endSameAsBegin","endsWithParent","endRe","terminator_end","illegalRe","c","variants","cached_variants","variant","dependencyOnParent","starts","expandOrCloneMode","mm","term","rule","buildModeRegex","providedScore","commonKeyword","Component","props","detectedLanguage","unknownLanguage","computed","autoDetect","hljs","getLanguage","highlightAuto","code","highlight","ignoreIllegals","detectectLanguage","console","warn","autodetect","Boolean","createElement","class","domProps","innerHTML","VuePlugin","install","Vue","component","escape$1","inherit$1","nodeStream$1","mergeStreams$1","NO_MATCH","Symbol","ArrayProto","languages","create","aliases","plugins","SAFE_MODE","fixMarkupRe","LANGUAGE_NOT_FOUND","PLAINTEXT_LANGUAGE","disableAutodetect","noHighlightRe","languageDetectRe","tabReplace","useBR","__emitter","shouldNotHighlight","languageName","test","continuation","context","fire","_highlight","codeToHighlight","keywordData","matchText","prototype","processBuffer","subLanguage","modeBuffer","continuations","addSublanguage","processSubLanguage","buf","keywordRelevance","addKeyword","processKeywords","startNewMode","doIgnore","lexeme","resumeScanAtSamePosition","doBeginMatch","newMode","cb","skip","excludeBegin","returnBegin","doEndMatch","matchPlusRemainder","endMode","endOfMode","matched","startsWith","endsParent","origin","returnEnd","excludeEnd","lastMatch","processLexeme","textBeforeMatch","err","badRule","iterations","error","md","list","current","unshift","item","processContinuations","processedCount","closeAllNodes","finalize","toHTML","message","illegalBy","msg","sofar","errorRaised","languageSubset","justTextHighlightResult","secondBest","filter","autoDetection","second_best","fixMarkup","html","highlightBlock","element","block","classes","parentNode","find","_class","blockLanguage","document","textContent","originalStream","resultNode","prevClassName","currentLang","resultLang","trim","buildClassName","relavance","initHighlighting","called","blocks","querySelectorAll","registerAliases","aliasList","alias","lang","plugin","arg","configure","userOptions","initHighlightingOnLoad","window","addEventListener","languageDefinition","rawDefinition","bind","listLanguages","requireLanguage","addPlugin","vuePlugin","debugMode","safeMode","versionString","HLJS","module","exports","api","content","__esModule","default","locals","___CSS_LOADER_API_IMPORT___","VAR","BRACED_VAR","SUBST","HERE_DOC","QUOTE_STRING","ARITHMETIC","KNOWN_SHEBANG","FUNCTION","literal","built_in","RULE","KEYWORDS","LITERALS","BUILT_INS","lookahead","optional","IDENT_RE$1","FRAGMENT","XML_TAG","isTrulyOpeningTag","afterMatchIndex","nextChar","indexOf","hasClosingTag","KEYWORDS$1","nonDecimalLiterals","prefixLetters","validChars","noLeadingZeroDecimalDigits","decimalDigits","exponentPart","NUMBER","HTML_TEMPLATE","CSS_TEMPLATE","TEMPLATE_STRING","SUBST_INTERNALS","SUBST_AND_COMMENTS","PARAMS_CONTAINS","PARAMS","label","ALLOWED_COMMENTS","TYPES","VALUE_CONTAINER","OBJECT","ARRAY","VARIABLE_NAME_RE","DEFAULT","INTERPOLATION","INTERPOLATED_VARIABLE","STRING","COMMAND","MACROCALL","INLINE_HTML","LINK","BOLD","ITALIC","CONTAINABLE","PROMPT","LITERAL_BRACKET","RUBY_METHOD_RE","RUBY_KEYWORDS","YARDOCTAG","IRB_OBJECT","COMMENT_MODES","RUBY_DEFAULT_CONTAINS","IRB_DEFAULT","COMMENT_MODE","XML_ENTITIES","XML_META_KEYWORDS","XML_META_PAR_KEYWORDS","APOS_META_STRING_MODE","QUOTE_META_STRING_MODE","TAG_INTERNALS","URI_CHARACTERS","CONTAINER_STRING","TIMESTAMP","VALUE_MODES"],"mappings":"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,KAAM,OACN0L,QAAS,CAAC,SACV/J,QAAS,MACTC,SAAU,CACR,CACEL,MAAO,kBAAeG,IAAK,IAC3BE,SAAU,CAAC,CAACrC,UAAW,SAAUgC,MAAO,kBAE1C,CACEA,MAAO,gCAAkC6M,aAAa,EAAM1M,IAAK,IACjEE,SAAU,CACR,CACErC,UAAW,SACXgC,MAAO,IAAKG,IAAK,IACjByM,cAAc,EAAMW,YAAY,GAElC,CACEvN,MAnBI,kBAqBN,CACEhC,UAAW,UACXgC,MAAO,YAIb,CACEhC,UAAW,YACXgC,MAAO,OAAQG,IAAK,KAAMoN,YAAY,EACtCnN,QAAS,YACTqH,OAAQ,CAACtH,IAAK,IAAKF,UAAW,IAEhC,CACED,MAAO,SACPyH,OAAQ,CAACkE,YAAa,GAAI3E,gBAAgB,Q,kBC5ClD,IACMqM,EAAW,CACf,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,WAEIC,EAAW,CACf,OACA,QACA,OACA,YACA,MACA,YAiFIC,EAAY,GAAG7T,OAlCI,CACvB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,YAGyB,CACzB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,SACA,UA3EY,CACZ,OACA,WACA,SACA,OACA,OACA,SACA,SACA,SACA,WACA,UACA,QACA,SACA,MACA,MACA,UACA,UACA,QACA,UACA,OACA,UACA,eACA,aACA,aACA,YACA,cACA,cACA,eACA,QACA,aACA,oBACA,eAGkB,CAClB,YACA,gBACA,aACA,iBACA,cACA,YACA,aAqDF,SAASF,EAAOC,GACd,OAAKA,EACa,iBAAPA,EAAwBA,EAE5BA,EAAGD,OAHM,KAUlB,SAASgU,EAAU/T,GACjB,OAAOC,EAAO,MAAOD,EAAI,KAO3B,SAASgU,EAAShU,G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kBCwP3ByH,EAAOC,QA5PP,SAAgB5J,GACd,IAqHM8K,EAAW,CACf7M,QAtHqB,CACrB,MACA,KACA,SACA,QACA,QACA,QACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,UACA,MACA,GACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,cACA,MACA,KACA,OACA,QACA,SACA,MACA,QACA,OACA,SAqFwB1J,KAAK,KAC7BqW,SAnFgB,CAChB,aACA,MACA,MACA,MACA,QACA,MACA,OACA,aACA,YACA,QACA,WACA,MACA,cACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,OACA,SACA,QACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,MACA,KACA,QACA,MACA,aACA,aACA,OACA,MACA,OACA,SACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,QACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,OACA,OAcoBrW,KAAK,KACzBoW,QAZe,CACf,YACA,WACA,QACA,OACA,iBACA,QAMkBpW,KAAK,MAGnBqZ,EAAS,CACbnY,UAAW,OAASgC,MAAO,kBAGvB4S,EAAQ,CACZ5U,UAAW,QACXgC,MAAO,KAAMG,IAAK,KAClB2F,SAAUuN,EACVjT,QAAS,KAGLgW,EAAkB,CACtBpW,MAAO,OACPC,UAAW,GAGP0V,EAAS,CACb3X,UAAW,SACXqC,SAAU,CAACkI,EAAKxI,kBAChBsH,SAAU,CACR,CACErH,MAAO,yCAA0CG,IAAK,MACtDE,SAAU,CAACkI,EAAKxI,iBAAkBoW,GAClClW,UAAW,IAEb,CACED,MAAO,yCAA0CG,IAAK,MACtDE,SAAU,CAACkI,EAAKxI,iBAAkBoW,GAClClW,UAAW,IAEb,CACED,MAAO,8BAA+BG,IAAK,MAC3CE,SAAU,CAACkI,EAAKxI,iBAAkBoW,EAAQC,EAAiBxD,IAE7D,CACE5S,MAAO,8BAA+BG,IAAK,MAC3CE,SAAU,CAACkI,EAAKxI,iBAAkBoW,EAAQC,EAAiBxD,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","file":"async-highlight.js","sourcesContent":["\nimport highlightjs from 'highlight.js/lib/core';\nimport 'highlight.js/styles/github.css';\nimport bash from 'highlight.js/lib/languages/bash';\nimport css from 'highlight.js/lib/languages/css';\nimport http from 'highlight.js/lib/languages/http';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport json from 'highlight.js/lib/languages/json';\nimport julia from 'highlight.js/lib/languages/julia';\nimport markdown from 'highlight.js/lib/languages/markdown';\nimport plaintext from 'highlight.js/lib/languages/plaintext';\nimport python from 'highlight.js/lib/languages/python';\nimport r from 'highlight.js/lib/languages/r';\nimport ruby from 'highlight.js/lib/languages/ruby';\nimport shell from 'highlight.js/lib/languages/shell';\nimport sql from 'highlight.js/lib/languages/sql';\nimport xml from 'highlight.js/lib/languages/xml';\nimport yaml from 'highlight.js/lib/languages/yaml';\nhighlightjs.registerLanguage('bash', bash);\nhighlightjs.registerLanguage('css', css);\nhighlightjs.registerLanguage('http', http);\nhighlightjs.registerLanguage('javascript', javascript);\nhighlightjs.registerLanguage('json', json);\nhighlightjs.registerLanguage('julia', julia);\nhighlightjs.registerLanguage('markdown', markdown);\nhighlightjs.registerLanguage('plaintext', plaintext);\nhighlightjs.registerLanguage('python', python);\nhighlightjs.registerLanguage('r', r);\nhighlightjs.registerLanguage('ruby', ruby);\nhighlightjs.registerLanguage('shell', shell);\nhighlightjs.registerLanguage('sql', sql);\nhighlightjs.registerLanguage('xml', xml);\nhighlightjs.registerLanguage('yaml', yaml);\nexport default highlightjs;\n","// https://github.com/substack/deep-freeze/blob/master/index.js\n/** @param {any} obj */\nfunction deepFreeze(obj) {\n  Object.freeze(obj);\n\n  var objIsFunction = typeof obj === 'function';\n\n  Object.getOwnPropertyNames(obj).forEach(function(prop) {\n    if (Object.hasOwnProperty.call(obj, prop)\n    && obj[prop] !== null\n    && (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n    // IE11 fix: https://github.com/highlightjs/highlight.js/issues/2318\n    // TODO: remove in the future\n    && (objIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\n    && !Object.isFrozen(obj[prop])) {\n      deepFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n}\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n  }\n\n  ignoreMatch() {\n    this.ignore = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit(original, ...objects) {\n  /** @type Record<string,any> */\n  var result = {};\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/* Stream merging */\n\n/**\n * @typedef Event\n * @property {'start'|'stop'} event\n * @property {number} offset\n * @property {Node} node\n */\n\n/**\n * @param {Node} node\n */\nfunction tag(node) {\n  return node.nodeName.toLowerCase();\n}\n\n/**\n * @param {Node} node\n */\nfunction nodeStream(node) {\n  /** @type Event[] */\n  var result = [];\n  (function _nodeStream(node, offset) {\n    for (var child = node.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType === 3) {\n        offset += child.nodeValue.length;\n      } else if (child.nodeType === 1) {\n        result.push({\n          event: 'start',\n          offset: offset,\n          node: child\n        });\n        offset = _nodeStream(child, offset);\n        // Prevent void elements from having an end tag that would actually\n        // double them in the output. There are more void elements in HTML\n        // but we list only those realistically expected in code display.\n        if (!tag(child).match(/br|hr|img|input/)) {\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: child\n          });\n        }\n      }\n    }\n    return offset;\n  })(node, 0);\n  return result;\n}\n\n/**\n * @param {any} original - the original stream\n * @param {any} highlighted - stream of the highlighted source\n * @param {string} value - the original source itself\n */\nfunction mergeStreams(original, highlighted, value) {\n  var processed = 0;\n  var result = '';\n  var nodeStack = [];\n\n  function selectStream() {\n    if (!original.length || !highlighted.length) {\n      return original.length ? original : highlighted;\n    }\n    if (original[0].offset !== highlighted[0].offset) {\n      return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n    }\n\n    /*\n    To avoid starting the stream just before it should stop the order is\n    ensured that original always starts first and closes last:\n\n    if (event1 == 'start' && event2 == 'start')\n      return original;\n    if (event1 == 'start' && event2 == 'stop')\n      return highlighted;\n    if (event1 == 'stop' && event2 == 'start')\n      return original;\n    if (event1 == 'stop' && event2 == 'stop')\n      return highlighted;\n\n    ... which is collapsed to:\n    */\n    return highlighted[0].event === 'start' ? original : highlighted;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function open(node) {\n    /** @param {Attr} attr */\n    function attributeString(attr) {\n      return ' ' + attr.nodeName + '=\"' + escapeHTML(attr.value) + '\"';\n    }\n    // @ts-ignore\n    result += '<' + tag(node) + [].map.call(node.attributes, attributeString).join('') + '>';\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function close(node) {\n    result += '</' + tag(node) + '>';\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function render(event) {\n    (event.event === 'start' ? open : close)(event.node);\n  }\n\n  while (original.length || highlighted.length) {\n    var stream = selectStream();\n    result += escapeHTML(value.substring(processed, stream[0].offset));\n    processed = stream[0].offset;\n    if (stream === original) {\n      /*\n      On any opening or closing tag of the original markup we first close\n      the entire highlighted node stack, then render the original tag along\n      with all the following original tags at the same offset and then\n      reopen all the tags on the highlighted stack.\n      */\n      nodeStack.reverse().forEach(close);\n      do {\n        render(stream.splice(0, 1)[0]);\n        stream = selectStream();\n      } while (stream === original && stream.length && stream[0].offset === processed);\n      nodeStack.reverse().forEach(open);\n    } else {\n      if (stream[0].event === 'start') {\n        nodeStack.push(stream[0].node);\n      } else {\n        nodeStack.pop();\n      }\n      render(stream.splice(0, 1)[0]);\n    }\n  }\n  return result + escapeHTML(value.substr(processed));\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  escapeHTML: escapeHTML,\n  inherit: inherit,\n  nodeStream: nodeStream,\n  mergeStreams: mergeStreams\n});\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = node.kind;\n    if (!node.sublanguage) {\n      className = `${this.classPrefix}${className}`;\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\nfunction escape(value) {\n  return new RegExp(value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param {RegExp} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  var match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {string} separator\n * @returns {string}\n */\nfunction join(regexps, separator = \"|\") {\n  // backreferenceRe matches an open parenthesis or backreference. To avoid\n  // an incorrect parse, it additionally matches the following:\n  // - [...] elements, where the meaning of parentheses and escapes change\n  // - other escape sequences, so we do not misparse escape sequences as\n  //   interesting elements\n  // - non-matching or lookahead parentheses, which do not capture. These\n  //   follow the '(' with a '?'.\n  var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n  var numCaptures = 0;\n  var ret = '';\n  for (var i = 0; i < regexps.length; i++) {\n    numCaptures += 1;\n    var offset = numCaptures;\n    var re = source(regexps[i]);\n    if (i > 0) {\n      ret += separator;\n    }\n    ret += \"(\";\n    while (re.length > 0) {\n      var match = backreferenceRe.exec(re);\n      if (match == null) {\n        ret += re;\n        break;\n      }\n      ret += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        ret += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        ret += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    ret += \")\";\n  }\n  return ret;\n}\n\n// Common regexps\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit({\n    className: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  className: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  className: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  var mode = inherit(\n    {\n      className: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push(PHRASAL_WORDS_MODE);\n  mode.contains.push({\n    className: 'doctag',\n    begin: '(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):',\n    relevance: 0\n  });\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  className: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  className: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst CSS_NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE + '(' +\n    '%|em|ex|ch|rem' +\n    '|vw|vh|vmin|vmax' +\n    '|cm|mm|in|pt|pc|px' +\n    '|deg|grad|rad|turn' +\n    '|s|ms' +\n    '|Hz|kHz' +\n    '|dpi|dpcm|dppx' +\n    ')?',\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  className: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  className: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IDENT_RE: IDENT_RE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  NUMBER_RE: NUMBER_RE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  COMMENT: COMMENT,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  NUMBER_MODE: NUMBER_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  CSS_NUMBER_MODE: CSS_NUMBER_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n  METHOD_GUARD: METHOD_GUARD,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n// keywords that should have no default relevance value\nvar COMMON_KEYWORDS = 'of and for in not or if then'.split(' ');\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensativility of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(join(terminators), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminator_end) {\n      mm.addRule(mode.terminator_end, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  // TODO: We need negative look-behind support to do this properly\n  /**\n   * Skip a match if it has a preceding or trailing dot\n   *\n   * This is used for `beginKeywords` to prevent matching expressions such as\n   * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n   * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n   * @param {RegExpMatchArray} match\n   * @param {CallbackResponse} response\n   */\n  function skipIfhasPrecedingOrTrailingDot(match, response) {\n    const before = match.input[match.index - 1];\n    const after = match.input[match.index + match[0].length];\n    if (before === \".\" || after === \".\") {\n      response.ignoreMatch();\n    }\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.compiled) return cmode;\n    mode.compiled = true;\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    mode.keywords = mode.keywords || mode.beginKeywords;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\") {\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    // both are not allowed\n    if (mode.lexemes && keywordPattern) {\n      throw new Error(\"ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) \");\n    }\n\n    // `mode.lexemes` was the old standard before we added and now recommend\n    // using `keywords.$pattern` to pass the keyword pattern\n    cmode.keywordPatternRe = langRe(mode.lexemes || keywordPattern || /\\w+/, true);\n\n    if (parent) {\n      if (mode.beginKeywords) {\n        // for languages with keywords that include non-word characters checking for\n        // a word boundary is not sufficient, so instead we check for a word boundary\n        // or whitespace - this does no harm in any case since our keyword engine\n        // doesn't allow spaces in keywords anyways and we still check for the boundary\n        // first\n        mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?=\\\\b|\\\\s)';\n        mode.__beforeBegin = skipIfhasPrecedingOrTrailingDot;\n      }\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(mode.begin);\n      if (mode.endSameAsBegin) mode.end = mode.begin;\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(mode.end);\n      cmode.terminator_end = source(mode.end) || '';\n      if (mode.endsWithParent && parent.terminator_end) {\n        cmode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(mode.illegal);\n    // eslint-disable-next-line no-undefined\n    if (mode.relevance === undefined) mode.relevance = 1;\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cached_variants) {\n    mode.cached_variants = mode.variants.map(function(variant) {\n      return inherit(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cached_variants) {\n    return mode.cached_variants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\n/***********************************************\n  Keywords\n***********************************************/\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive) {\n  /** @type KeywordDict */\n  var compiledKeywords = {};\n\n  if (typeof rawKeywords === 'string') { // string\n    splitAndCompile('keyword', rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(className) {\n      splitAndCompile(className, rawKeywords[className]);\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} className\n   * @param {string} keywordList\n   */\n  function splitAndCompile(className, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.toLowerCase();\n    }\n    keywordList.split(' ').forEach(function(keyword) {\n      var pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\nvar version = \"10.3.1\";\n\n// @ts-nocheck\n\nfunction hasValueOrEmptyAttribute(value) {\n  return Boolean(value || value === \"\");\n}\n\nconst Component = {\n  props: [\"language\", \"code\", \"autodetect\"],\n  data: function() {\n    return {\n      detectedLanguage: \"\",\n      unknownLanguage: false\n    };\n  },\n  computed: {\n    className() {\n      if (this.unknownLanguage) return \"\";\n\n      return \"hljs \" + this.detectedLanguage;\n    },\n    highlighted() {\n      // no idea what language to use, return raw code\n      if (!this.autoDetect && !hljs.getLanguage(this.language)) {\n        console.warn(`The language \"${this.language}\" you specified could not be found.`);\n        this.unknownLanguage = true;\n        return escapeHTML(this.code);\n      }\n\n      let result;\n      if (this.autoDetect) {\n        result = hljs.highlightAuto(this.code);\n        this.detectedLanguage = result.language;\n      } else {\n        result = hljs.highlight(this.language, this.code, this.ignoreIllegals);\n        this.detectectLanguage = this.language;\n      }\n      return result.value;\n    },\n    autoDetect() {\n      return !this.language || hasValueOrEmptyAttribute(this.autodetect);\n    },\n    ignoreIllegals() {\n      return true;\n    }\n  },\n  // this avoids needing to use a whole Vue compilation pipeline just\n  // to build Highlight.js\n  render(createElement) {\n    return createElement(\"pre\", {}, [\n      createElement(\"code\", {\n        class: this.className,\n        domProps: { innerHTML: this.highlighted }})\n    ]);\n  }\n  // template: `<pre><code :class=\"className\" v-html=\"highlighted\"></code></pre>`\n};\n\nconst VuePlugin = {\n  install(Vue) {\n    Vue.component('highlightjs', Component);\n  }\n};\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\nconst escape$1 = escapeHTML;\nconst inherit$1 = inherit;\n\nconst { nodeStream: nodeStream$1, mergeStreams: mergeStreams$1 } = utils;\nconst NO_MATCH = Symbol(\"nomatch\");\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Convenience variables for build-in objects\n  /** @type {unknown[]} */\n  var ArrayProto = [];\n\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  var languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  var aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  var plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  var SAFE_MODE = true;\n  var fixMarkupRe = /(^(<[^>]+>|\\t|)+|\\n)/gm;\n  var LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  var options = {\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      var language = getLanguage(match[1]);\n      if (!language) {\n        console.warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        console.warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {Mode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(languageName, code, ignoreIllegals, continuation) {\n    /** @type {{ code: string, language: string, result?: any }} */\n    var context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    var result = context.result ?\n      context.result :\n      _highlight(context.language, context.code, ignoreIllegals, continuation);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n  */\n  function _highlight(languageName, code, ignoreIllegals, continuation) {\n    var codeToHighlight = code;\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {RegExpMatchArray} match - regexp match data\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, match) {\n      var matchText = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return Object.prototype.hasOwnProperty.call(mode.keywords, matchText) && mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const data = keywordData(top, match);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          relevance += keywordRelevance;\n          emitter.addKeyword(match[0], kind);\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substr(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      var result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = result.top;\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result.emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {Mode} mode - new mode to start\n     */\n    function startNewMode(mode) {\n      if (mode.className) {\n        emitter.openNode(mode.className);\n      }\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.ignore) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexs to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      var lexeme = match[0];\n      var newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.ignore) return doIgnore(lexeme);\n      }\n\n      if (newMode && newMode.endSameAsBegin) {\n        newMode.endRe = escape(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode);\n      // if (mode[\"after:begin\"]) {\n      //   let resp = new Response(mode);\n      //   mode[\"after:begin\"](match, resp);\n      // }\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      var lexeme = match[0];\n      var matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      var endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      var origin = top;\n      if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.className) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        if (endMode.endSameAsBegin) {\n          endMode.starts.endRe = endMode.endRe;\n        }\n        startNewMode(endMode.starts);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      var list = [];\n      for (var current = top; current !== language; current = current.parent) {\n        if (current.className) {\n          list.unshift(current.className);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    var lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceeding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      var lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error('0 width match regex');\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        var processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  Only one occasion now.  An end match that was\n      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`\n      rule sets the end rule to a specific match.  Since the overall mode termination rule that's\n      being used to scan the text isn't recompiled that means that any match that LOOKS like\n      the end (but is not, because it is not an exact match to the beginning) will\n      end up here.  A definite end match, but when `doEndMatch` tries to \"reapply\"\n      the end rule and fails to match, we wind up here, and just silently ignore the end.\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    var language = getLanguage(languageName);\n    if (!language) {\n      console.error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    var md = compileLanguage(language);\n    var result = '';\n    /** @type {CompiledMode} */\n    var top = continuation || md;\n    /** @type Record<string,Mode> */\n    var continuations = {}; // keep continuations for sub-languages\n    var emitter = new options.__emitter(options);\n    processContinuations();\n    var modeBuffer = '';\n    var relevance = 0;\n    var index = 0;\n    var iterations = 0;\n    var resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: languageName,\n        illegal: false,\n        emitter: emitter,\n        top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          illegal: true,\n          illegalBy: {\n            msg: err.message,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode\n          },\n          sofar: result,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          illegal: false,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter,\n          language: languageName,\n          top: top,\n          errorRaised: err\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      relevance: 0,\n      emitter: new options.__emitter(options),\n      value: escape$1(code),\n      illegal: false,\n      top: PLAINTEXT_LANGUAGE\n    };\n    result.emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    var result = justTextHighlightResult(code);\n    var secondBest = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = _highlight(name, code, false);\n      current.language = name;\n      if (current.relevance > secondBest.relevance) {\n        secondBest = current;\n      }\n      if (current.relevance > result.relevance) {\n        secondBest = result;\n        result = current;\n      }\n    });\n    if (secondBest.language) {\n      // second_best (with underscore) is the expected API\n      result.second_best = secondBest;\n    }\n    return result;\n  }\n\n  /**\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n    @param {string} html\n    @returns {string}\n  */\n  function fixMarkup(html) {\n    if (!(options.tabReplace || options.useBR)) {\n      return html;\n    }\n\n    return html.replace(fixMarkupRe, match => {\n      if (match === '\\n') {\n        return options.useBR ? '<br>' : match;\n      } else if (options.tabReplace) {\n        return match.replace(/\\t/g, options.tabReplace);\n      }\n      return match;\n    });\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {string} prevClassName\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang;\n    var result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (!prevClassName.includes(language)) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code. Accepts a DOM node and\n   * two optional parameters for fixMarkup.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightBlock(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightBlock\",\n      { block: element, language: language });\n\n    if (options.useBR) {\n      node = document.createElement('div');\n      node.innerHTML = element.innerHTML.replace(/\\n/g, '').replace(/<br[ /]*>/g, '\\n');\n    } else {\n      node = element;\n    }\n    const text = node.textContent;\n    const result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    const originalStream = nodeStream$1(node);\n    if (originalStream.length) {\n      const resultNode = document.createElement('div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams$1(originalStream, nodeStream$1(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    fire(\"after:highlightBlock\", { block: element, result: result });\n\n    element.innerHTML = result.value;\n    element.className = buildClassName(element.className, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relavance: result.relevance\n    };\n    if (result.second_best) {\n      element.second_best = {\n        language: result.second_best.language,\n        // TODO: remove with version 11.0\n        re: result.second_best.relevance,\n        relavance: result.second_best.relevance\n      };\n    }\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {{}} userOptions\n   */\n  function configure(userOptions) {\n    if (userOptions.useBR) {\n      console.warn(\"'useBR' option is deprecated and will be removed entirely in v11.0\");\n      console.warn(\"Please see https://github.com/highlightjs/highlight.js/issues/2559\");\n    }\n    options = inherit$1(options, userOptions);\n  }\n\n  /**\n   * Highlights to all <pre><code> blocks on a page\n   *\n   * @type {Function & {called?: boolean}}\n   */\n  const initHighlighting = () => {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  };\n\n  // Higlights all when DOMContentLoaded fires\n  function initHighlightingOnLoad() {\n    // @ts-ignore\n    window.addEventListener('DOMContentLoaded', initHighlighting, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    var lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error) {\n      console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error; } else { console.error(error); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n    intended usage: When one language truly requires another\n\n    Unlike `getLanguage`, this will throw when the requested language\n    is not available.\n\n    @param {string} name - name of the language to fetch/require\n    @returns {Language | never}\n  */\n  function requireLanguage(name) {\n    var lang = getLanguage(name);\n    if (lang) { return lang; }\n\n    var err = new Error('The \\'{}\\' language is required, but not loaded.'.replace('{}', name));\n    throw err;\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    var cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n  Note: fixMarkup is deprecated and will be removed entirely in v11\n\n  @param {string} arg\n  @returns {string}\n  */\n  function deprecateFixMarkup(arg) {\n    console.warn(\"fixMarkup is deprecated and will be removed entirely in v11.0\");\n    console.warn(\"Please see https://github.com/highlightjs/highlight.js/issues/2534\");\n\n    return fixMarkup(arg);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    fixMarkup: deprecateFixMarkup,\n    highlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    requireLanguage,\n    autoDetection,\n    inherit: inherit$1,\n    addPlugin,\n    // plugins for frameworks\n    vuePlugin: VuePlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexs into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\n","var api = require(\"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../css-loader/dist/cjs.js!./github.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/*\\n\\ngithub.com style (c) Vasily Polovnyov <vast@whiteants.net>\\n\\n*/\\n\\n.hljs {\\n  display: block;\\n  overflow-x: auto;\\n  padding: 0.5em;\\n  color: #333;\\n  background: #f8f8f8;\\n}\\n\\n.hljs-comment,\\n.hljs-quote {\\n  color: #998;\\n  font-style: italic;\\n}\\n\\n.hljs-keyword,\\n.hljs-selector-tag,\\n.hljs-subst {\\n  color: #333;\\n  font-weight: bold;\\n}\\n\\n.hljs-number,\\n.hljs-literal,\\n.hljs-variable,\\n.hljs-template-variable,\\n.hljs-tag .hljs-attr {\\n  color: #008080;\\n}\\n\\n.hljs-string,\\n.hljs-doctag {\\n  color: #d14;\\n}\\n\\n.hljs-title,\\n.hljs-section,\\n.hljs-selector-id {\\n  color: #900;\\n  font-weight: bold;\\n}\\n\\n.hljs-subst {\\n  font-weight: normal;\\n}\\n\\n.hljs-type,\\n.hljs-class .hljs-title {\\n  color: #458;\\n  font-weight: bold;\\n}\\n\\n.hljs-tag,\\n.hljs-name,\\n.hljs-attribute {\\n  color: #000080;\\n  font-weight: normal;\\n}\\n\\n.hljs-regexp,\\n.hljs-link {\\n  color: #009926;\\n}\\n\\n.hljs-symbol,\\n.hljs-bullet {\\n  color: #990073;\\n}\\n\\n.hljs-built_in,\\n.hljs-builtin-name {\\n  color: #0086b3;\\n}\\n\\n.hljs-meta {\\n  color: #999;\\n  font-weight: bold;\\n}\\n\\n.hljs-deletion {\\n  background: #fdd;\\n}\\n\\n.hljs-addition {\\n  background: #dfd;\\n}\\n\\n.hljs-emphasis {\\n  font-style: italic;\\n}\\n\\n.hljs-strong {\\n  font-weight: bold;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end:/\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: {\n      contains: [\n        hljs.END_SAME_AS_BEGIN({\n          begin: /(\\w+)/,\n          end: /(\\w+)/,\n          className: 'string'\n        })\n      ]\n    }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  return {\n    name: 'Bash',\n    aliases: ['sh', 'zsh'],\n    keywords: {\n      $pattern: /\\b[a-z._-]+\\b/,\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp'\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n","/*\nLanguage: CSS\nCategory: common, css\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/, returnBegin: true,\n    contains: [\n      {\n        className: 'built_in',\n        begin: /[\\w-]+/\n      },\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.CSS_NUMBER_MODE,\n        ]\n      }\n    ]\n  };\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/, end: ':', excludeEnd: true,\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION_LIKE,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'number', begin: '#[0-9A-Fa-f]+'\n        },\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  };\n  var AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  var AT_MODIFIERS = \"and or not only\";\n  var AT_PROPERTY_RE = /@\\-?\\w[\\w]*(\\-\\w+)*/; // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      ATTRIBUTE\n    ]\n  };\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n        ]\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        lexemes: AT_IDENTIFIER,\n        keywords: '@page @font-face'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            keywords: AT_MODIFIERS,\n            contains: [\n              {\n                begin: /[a-z-]+:/,\n                className:\"attribute\"\n              },\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = css;\n","/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: common, protocols\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\nfunction http(hljs) {\n  var VERSION = 'HTTP/[0-9\\\\.]+';\n  return {\n    name: 'HTTP',\n    aliases: ['https'],\n    illegal: '\\\\S',\n    contains: [\n      {\n        begin: '^' + VERSION, end: '$',\n        contains: [{className: 'number', begin: '\\\\b\\\\d{3}\\\\b'}]\n      },\n      {\n        begin: '^[A-Z]+ (.*?) ' + VERSION + '$', returnBegin: true, end: '$',\n        contains: [\n          {\n            className: 'string',\n            begin: ' ', end: ' ',\n            excludeBegin: true, excludeEnd: true\n          },\n          {\n            begin: VERSION\n          },\n          {\n            className: 'keyword',\n            begin: '[A-Z]+'\n          }\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: '^\\\\w', end: ': ', excludeEnd: true,\n        illegal: '\\\\n|\\\\s|=',\n        starts: {end: '$', relevance: 0}\n      },\n      {\n        begin: '\\\\n\\\\n',\n        starts: {subLanguage: [], endsWithParent: true}\n      }\n    ]\n  };\n}\n\nmodule.exports = http;\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/* eslint-disable no-unreachable */\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = match[0].replace(\"<\", \"</\");\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      // nested type?\n      // HTML should not include another raw `<` inside a tag\n      // But a type might: `<Array<Array<number>>`, etc.\n      if (nextChar === \"<\") {\n        response.ignoreMatch();\n        return;\n      }\n      // <something>\n      // This is now either a tag or a type.\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.join(\" \"),\n    literal: LITERALS.join(\" \"),\n    built_in: BUILT_INS.join(\" \")\n  };\n  const nonDecimalLiterals = (prefixLetters, validChars) =>\n    `\\\\b0[${prefixLetters}][${validChars}]([${validChars}_]*[${validChars}])?n?`;\n  const noLeadingZeroDecimalDigits = /[1-9]([0-9_]*\\d)?/;\n  const decimalDigits = /\\d([0-9_]*\\d)?/;\n  const exponentPart = concat(/[eE][+-]?/, decimalDigits);\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: nonDecimalLiterals('bB', '01') }, // Binary literals\n      { begin: nonDecimalLiterals('oO', '0-7') }, // Octal literals\n      { begin: nonDecimalLiterals('xX', '0-9a-fA-F') }, // Hexadecimal literals\n      { begin: concat(/\\b/, noLeadingZeroDecimalDigits, 'n') }, // Non-zero BigInt literals\n      { begin: concat(/(\\b0)?\\./, decimalDigits, optional(exponentPart)) }, // Decimal literals between 0 and 1\n      { begin: concat(\n        /\\b/,\n        noLeadingZeroDecimalDigits,\n        optional(concat(/\\./, optional(decimalDigits))), // fractional part\n        optional(exponentPart)\n        ) }, // Decimal literals >= 1\n      { begin: /\\b0[\\.n]?/ }, // Zero literals (`0`, `0.`, `0n`)\n    ],\n    relevance: 0\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    '/\\\\*\\\\*',\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          className: 'doctag',\n          begin: '@[A-Za-z]+',\n          contains: [\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /{/,\n      end: /}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      {\n        label: \"use_strict\",\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      NUMBER,\n      { // object attr container\n        begin: concat(/[{,\\n]\\s*/,\n          // we need to look ahead to make sure that we actually have an\n          // attribute coming up so we don't steal a comma from a potential\n          // \"value\" container\n          //\n          // NOTE: this might not work how you think.  We don't actually always\n          // enter this mode and stay.  Instead it might merely match `,\n          // <comments up next>` and then immediately end after the , because it\n          // fails to find any actual attrs. But this still does the job because\n          // it prevents the value contain rule from grabbing this instead and\n          // prevening this rule from firing when we actually DO have keys.\n          lookahead(concat(\n            // we also need to allow for multiple possible comments inbetween\n            // the first key:value pairing\n            /(\\/\\/.*$)*/,\n            /(\\/\\*(.|\\n)*\\*\\/)*/,\n            /\\s*/,\n            IDENT_RE$1 + '\\\\s*:'))),\n        relevance: 0,\n        contains: [\n          {\n            className: 'attr',\n            begin: IDENT_RE$1 + lookahead('\\\\s*:'),\n            relevance: 0\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: '(\\\\(' +\n            '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n            '[^()]*' +\n            '\\\\))*[^()]*' +\n            '\\\\))*[^()]*' +\n            '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>',\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/, relevance: 0\n          },\n          {\n            className: '',\n            begin: /\\s/,\n            end: /\\s*/,\n            skip: true\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /[{;]/,\n        excludeEnd: true,\n        keywords: KEYWORDS$1,\n        contains: [\n          'self',\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n          PARAMS\n        ],\n        illegal: /%/\n      },\n      {\n        className: 'function',\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\))*[^()]*' +\n          '\\\\))*[^()]*' +\n          '\\\\)\\\\s*{', // end parens\n        returnBegin:true,\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n        ]\n      },\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        variants: [\n          { begin: '\\\\.' + IDENT_RE$1 },\n          { begin: '\\\\$' + IDENT_RE$1 }\n        ],\n        relevance: 0\n      },\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class',\n        end: /[{;=]/,\n        excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          { beginKeywords: 'extends' },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        begin: /\\b(?=constructor)/,\n        end: /[\\{;]/,\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n          'self',\n          PARAMS\n        ]\n      },\n      {\n        begin: '(get|set)\\\\s+(?=' + IDENT_RE$1 + '\\\\()',\n        end: /{/,\n        keywords: \"get set\",\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n          { begin: /\\(\\)/ }, // eat to avoid empty params\n          PARAMS\n        ]\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\nmodule.exports = javascript;\n","/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols\n*/\n\nfunction json(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var ALLOWED_COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ].concat(ALLOWED_COMMENTS),\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.push(OBJECT, ARRAY);\n  ALLOWED_COMMENTS.forEach(function(rule) {\n    TYPES.push(rule);\n  });\n  return {\n    name: 'JSON',\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n}\n\nmodule.exports = json;\n","/*\nLanguage: Julia\nDescription: Julia is a high-level, high-performance, dynamic programming language.\nAuthor: Kenta Sato <bicycle1885@gmail.com>\nContributors: Alex Arslan <ararslan@comcast.net>\nWebsite: https://julialang.org\n*/\n\nfunction julia(hljs) {\n  // Since there are numerous special names in Julia, it is too much trouble\n  // to maintain them by hand. Hence these names (i.e. keywords, literals and\n  // built-ins) are automatically generated from Julia v0.6 itself through\n  // the following scripts for each.\n\n  // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names\n  var VARIABLE_NAME_RE = '[A-Za-z_\\\\u00A1-\\\\uFFFF][A-Za-z_0-9\\\\u00A1-\\\\uFFFF]*';\n\n  var KEYWORDS = {\n    $pattern: VARIABLE_NAME_RE,\n    // # keyword generator, multi-word keywords handled manually below\n    // foreach(println, [\"in\", \"isa\", \"where\"])\n    // for kw in Base.REPLCompletions.complete_keyword(\"\")\n    //     if !(contains(kw, \" \") || kw == \"struct\")\n    //         println(kw)\n    //     end\n    // end\n    keyword:\n      'in isa where ' +\n      'baremodule begin break catch ccall const continue do else elseif end export false finally for function ' +\n      'global if import importall let local macro module quote return true try using while ' +\n      // legacy, to be deprecated in the next release\n      'type immutable abstract bitstype typealias ',\n\n    // # literal generator\n    // println(\"true\")\n    // println(\"false\")\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         v = eval(Symbol(name))\n    //         if !(v isa Function || v isa Type || v isa TypeVar || v isa Module || v isa Colon)\n    //             println(name)\n    //         end\n    //     end\n    // end\n    literal:\n      'true false ' +\n      'ARGS C_NULL DevNull ENDIAN_BOM ENV I Inf Inf16 Inf32 Inf64 InsertionSort JULIA_HOME LOAD_PATH MergeSort ' +\n      'NaN NaN16 NaN32 NaN64 PROGRAM_FILE QuickSort RoundDown RoundFromZero RoundNearest RoundNearestTiesAway ' +\n      'RoundNearestTiesUp RoundToZero RoundUp STDERR STDIN STDOUT VERSION catalan e|0 eu|0 eulergamma golden im ' +\n      'nothing pi γ π φ ',\n\n    // # built_in generator:\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         v = eval(Symbol(name))\n    //         if v isa Type || v isa TypeVar\n    //             println(name)\n    //         end\n    //     end\n    // end\n    built_in:\n      'ANY AbstractArray AbstractChannel AbstractFloat AbstractMatrix AbstractRNG AbstractSerializer AbstractSet ' +\n      'AbstractSparseArray AbstractSparseMatrix AbstractSparseVector AbstractString AbstractUnitRange AbstractVecOrMat ' +\n      'AbstractVector Any ArgumentError Array AssertionError Associative Base64DecodePipe Base64EncodePipe Bidiagonal '+\n      'BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError BufferStream CachingPool CapturedException ' +\n      'CartesianIndex CartesianRange Cchar Cdouble Cfloat Channel Char Cint Cintmax_t Clong Clonglong ClusterManager ' +\n      'Cmd CodeInfo Colon Complex Complex128 Complex32 Complex64 CompositeException Condition ConjArray ConjMatrix ' +\n      'ConjVector Cptrdiff_t Cshort Csize_t Cssize_t Cstring Cuchar Cuint Cuintmax_t Culong Culonglong Cushort Cwchar_t ' +\n      'Cwstring DataType Date DateFormat DateTime DenseArray DenseMatrix DenseVecOrMat DenseVector Diagonal Dict ' +\n      'DimensionMismatch Dims DirectIndexString Display DivideError DomainError EOFError EachLine Enum Enumerate ' +\n      'ErrorException Exception ExponentialBackOff Expr Factorization FileMonitor Float16 Float32 Float64 Function ' +\n      'Future GlobalRef GotoNode HTML Hermitian IO IOBuffer IOContext IOStream IPAddr IPv4 IPv6 IndexCartesian IndexLinear ' +\n      'IndexStyle InexactError InitError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException ' +\n      'InvalidStateException Irrational KeyError LabelNode LinSpace LineNumberNode LoadError LowerTriangular MIME Matrix ' +\n      'MersenneTwister Method MethodError MethodTable Module NTuple NewvarNode NullException Nullable Number ObjectIdDict ' +\n      'OrdinalRange OutOfMemoryError OverflowError Pair ParseError PartialQuickSort PermutedDimsArray Pipe ' +\n      'PollingFileWatcher ProcessExitedException Ptr QuoteNode RandomDevice Range RangeIndex Rational RawFD ' +\n      'ReadOnlyMemoryError Real ReentrantLock Ref Regex RegexMatch RemoteChannel RemoteException RevString RoundingMode ' +\n      'RowVector SSAValue SegmentationFault SerializationState Set SharedArray SharedMatrix SharedVector Signed ' +\n      'SimpleVector Slot SlotNumber SparseMatrixCSC SparseVector StackFrame StackOverflowError StackTrace StepRange ' +\n      'StepRangeLen StridedArray StridedMatrix StridedVecOrMat StridedVector String SubArray SubString SymTridiagonal ' +\n      'Symbol Symmetric SystemError TCPSocket Task Text TextDisplay Timer Tridiagonal Tuple Type TypeError TypeMapEntry ' +\n      'TypeMapLevel TypeName TypeVar TypedSlot UDPSocket UInt UInt128 UInt16 UInt32 UInt64 UInt8 UndefRefError UndefVarError ' +\n      'UnicodeError UniformScaling Union UnionAll UnitRange Unsigned UpperTriangular Val Vararg VecElement VecOrMat Vector ' +\n      'VersionNumber Void WeakKeyDict WeakRef WorkerConfig WorkerPool '\n  };\n\n  // placeholder for recursive self-reference\n  var DEFAULT = {\n    keywords: KEYWORDS, illegal: /<\\//\n  };\n\n  // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/\n  var NUMBER = {\n    className: 'number',\n    // supported numeric literals:\n    //  * binary literal (e.g. 0x10)\n    //  * octal literal (e.g. 0o76543210)\n    //  * hexadecimal literal (e.g. 0xfedcba876543210)\n    //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)\n    //  * decimal literal (e.g. 9876543210, 100_000_000)\n    //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)\n    begin: /(\\b0x[\\d_]*(\\.[\\d_]*)?|0x\\.\\d[\\d_]*)p[-+]?\\d+|\\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\\b\\d[\\d_]*(\\.[\\d_]*)?|\\.\\d[\\d_]*)([eEfF][-+]?\\d+)?/,\n    relevance: 0\n  };\n\n  var CHAR = {\n    className: 'string',\n    begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n  };\n\n  var INTERPOLATION = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    keywords: KEYWORDS\n  };\n\n  var INTERPOLATED_VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + VARIABLE_NAME_RE\n  };\n\n  // TODO: neatly escape normal code in string literal\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    variants: [\n      { begin: /\\w*\"\"\"/, end: /\"\"\"\\w*/, relevance: 10 },\n      { begin: /\\w*\"/, end: /\"\\w*/ }\n    ]\n  };\n\n  var COMMAND = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    begin: '`', end: '`'\n  };\n\n  var MACROCALL = {\n    className: 'meta',\n    begin: '@' + VARIABLE_NAME_RE\n  };\n\n  var COMMENT = {\n    className: 'comment',\n    variants: [\n      { begin: '#=', end: '=#', relevance: 10 },\n      { begin: '#', end: '$' }\n    ]\n  };\n\n  DEFAULT.name = 'Julia';\n  DEFAULT.contains = [\n    NUMBER,\n    CHAR,\n    STRING,\n    COMMAND,\n    MACROCALL,\n    COMMENT,\n    hljs.HASH_COMMENT_MODE,\n    {\n      className: 'keyword',\n      begin:\n        '\\\\b(((abstract|primitive)\\\\s+)type|(mutable\\\\s+)?struct)\\\\b'\n    },\n    {begin: /<:/}  // relevance booster\n  ];\n  INTERPOLATION.contains = DEFAULT.contains;\n\n  return DEFAULT;\n}\n\nmodule.exports = julia;\n","/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\n\nfunction markdown(hljs) {\n  const INLINE_HTML = {\n    begin: '<', end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  const HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}', end: '$'\n  };\n  const CODE = {\n    className: 'code',\n    variants: [\n      // TODO: fix to allow these to work with sublanguage also\n      { begin: '(`{3,})(.|\\\\n)*?\\\\1`*[ ]*', },\n      { begin: '(~{3,})(.|\\\\n)*?\\\\1~*[ ]*', },\n      // needed to allow markdown as a sublanguage to work\n      { begin: '```', end: '```+[ ]*$' },\n      { begin: '~~~', end: '~~~+[ ]*$' },\n      { begin: '`.+?`' },\n      {\n        begin: '(?=^( {4}|\\\\t))',\n        // use contains to gobble up multiple lines to allow the block to be whatever size\n        // but only have a single open/close tag vs one per line\n        contains: [\n          { begin: '^( {4}|\\\\t)', end: '(\\\\n)$' }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n  const LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  const LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'symbol',\n        begin: /\\[/, end: /\\]/,\n        excludeBegin: true, excludeEnd: true\n      },\n      {\n        className: 'link',\n        begin: /:\\s*/, end: /$/,\n        excludeBegin: true\n      }\n    ]\n  };\n  const LINK = {\n    begin: '\\\\[.+?\\\\][\\\\(\\\\[].*?[\\\\)\\\\]]',\n    returnBegin: true,\n    contains: [\n      {\n        className: 'string',\n        begin: '\\\\[', end: '\\\\]',\n        excludeBegin: true,\n        returnEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'link',\n        begin: '\\\\]\\\\(', end: '\\\\)',\n        excludeBegin: true, excludeEnd: true\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\]\\\\[', end: '\\\\]',\n        excludeBegin: true, excludeEnd: true\n      }\n    ],\n    relevance: 10\n  };\n  const BOLD = {\n    className: 'strong',\n    contains: [],\n    variants: [\n      {begin: /_{2}/, end: /_{2}/ },\n      {begin: /\\*{2}/, end: /\\*{2}/ }\n    ]\n  };\n  const ITALIC = {\n    className: 'emphasis',\n    contains: [],\n    variants: [\n      { begin: /\\*(?!\\*)/, end: /\\*/ },\n      { begin: /_(?!_)/, end: /_/, relevance: 0},\n    ]\n  };\n  BOLD.contains.push(ITALIC);\n  ITALIC.contains.push(BOLD);\n\n  var CONTAINABLE = [\n    INLINE_HTML,\n    LINK\n  ];\n\n  BOLD.contains = BOLD.contains.concat(CONTAINABLE);\n  ITALIC.contains = ITALIC.contains.concat(CONTAINABLE);\n\n  CONTAINABLE = CONTAINABLE.concat(BOLD,ITALIC);\n\n  const HEADER = {\n    className: 'section',\n    variants: [\n      {\n        begin: '^#{1,6}',\n        end: '$',\n        contains: CONTAINABLE\n       },\n      {\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\n        contains: [\n          { begin: '^[=-]*$' },\n          { begin: '^', end: \"\\\\n\", contains: CONTAINABLE },\n        ]\n       }\n    ]\n  };\n\n  const BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$',\n  };\n\n  return {\n    name: 'Markdown',\n    aliases: ['md', 'mkdown', 'mkd'],\n    contains: [\n      HEADER,\n      INLINE_HTML,\n      LIST,\n      BOLD,\n      ITALIC,\n      BLOCKQUOTE,\n      CODE,\n      HORIZONTAL_RULE,\n      LINK,\n      LINK_REFERENCE\n    ]\n  };\n}\n\nmodule.exports = markdown;\n","/*\nLanguage: Plain text\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\nDescription: Plain text without any highlighting.\nCategory: common\n*/\n\nfunction plaintext(hljs) {\n    return {\n        name: 'Plain text',\n        aliases: ['text', 'txt'],\n        disableAutodetect: true\n    };\n}\n\nmodule.exports = plaintext;\n","/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    '',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield',\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip',\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True',\n  ];\n\n  const KEYWORDS = {\n    keyword: RESERVED_WORDS.join(' '),\n    built_in: BUILT_INS.join(' '),\n    literal: LITERALS.join(' ')\n  };\n\n  const PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, LITERAL_BRACKET, SUBST]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, LITERAL_BRACKET, SUBST]\n      },\n      {\n        begin: /([uU]|[rR])'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/, end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/, end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/, end: /'/,\n        contains: [hljs.BACKSLASH_ESCAPE, LITERAL_BRACKET, SUBST]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, LITERAL_BRACKET, SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  const NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params at functions without params\n      {begin: /\\(\\s*\\)/, skip: true, className: null },\n      {\n        begin: /\\(/, end: /\\)/, excludeBegin: true, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: ['self', PROMPT, NUMBER, STRING, hljs.HASH_COMMENT_MODE],\n      },\n    ],\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n\n  return {\n    name: 'Python',\n    aliases: ['py', 'gyp', 'ipython'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      // eat \"if\" prior to string so that it won't accidentally be\n      // labeled as an f-string as in:\n      { beginKeywords: \"if\", relevance: 0 },\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n}\n\nmodule.exports = python;\n","/*\nLanguage: R\nDescription: R is a free software environment for statistical computing and graphics.\nAuthor: Joe Cheng <joe@rstudio.org>\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\nWebsite: https://www.r-project.org\nCategory: scientific\n*/\n\nfunction r(hljs) {\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\n  // is not immediately followed by a digit.\n  // R also supports quoted identifiers, which are near-arbitrary sequences\n  // delimited by backticks (`…`), which may contain escape sequences. These are\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\n  // FIXME: Support Unicode identifiers.\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\n\n  return {\n    name: 'R',\n\n    keywords: {\n      $pattern: IDENT_RE,\n      keyword:\n        'function if in break next repeat else for while',\n      literal:\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 ' +\n        'NA_character_|10 NA_complex_|10',\n      built_in:\n        // Builtin constants\n        'LETTERS letters month.abb month.name pi T F ' +\n        // Primitive functions\n        // These are all the functions in `base` that are implemented as a\n        // `.Primitive`, minus those functions that are also keywords.\n        'abs acos acosh all any anyNA Arg as.call as.character' +\n        'as.complex as.double as.environment as.integer as.logical' +\n        'as.null.default as.numeric as.raw asin asinh atan atanh attr' +\n        'attributes baseenv browser c call ceiling class Conj cos cosh' +\n        'cospi cummax cummin cumprod cumsum digamma dim dimnames' +\n        'emptyenv exp expression floor forceAndCall gamma gc.time' +\n        'globalenv Im interactive invisible is.array is.atomic is.call' +\n        'is.character is.complex is.double is.environment is.expression' +\n        'is.finite is.function is.infinite is.integer is.language' +\n        'is.list is.logical is.matrix is.na is.name is.nan is.null' +\n        'is.numeric is.object is.pairlist is.raw is.recursive is.single' +\n        'is.symbol lazyLoadDBfetch length lgamma list log max min' +\n        'missing Mod names nargs nzchar oldClass on.exit pos.to.env' +\n        'proc.time prod quote range Re rep retracemem return round' +\n        'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt' +\n        'standardGeneric substitute sum switch tan tanh tanpi tracemem' +\n        'trigamma trunc unclass untracemem UseMethod xtfrm',\n    },\n\n    contains: [\n      // Roxygen comments\n      hljs.COMMENT(\n        /#'/,\n        /$/,\n        {\n          contains: [\n            {\n              // Handle `@examples` separately to cause all subsequent code\n              // until the next `@`-tag on its own line to be kept as-is,\n              // preventing highlighting. This code is example R code, so nested\n              // doctags shouldn’t be treated as such. See\n              // `test/markup/r/roxygen.txt` for an example.\n              className: 'doctag',\n              begin: '@examples',\n              starts: {\n                contains: [\n                  { begin: /\\n/ },\n                  {\n                    begin: /#'\\s*(?=@[a-zA-Z]+)/,\n                    endsParent: true,\n                  },\n                  {\n                    begin: /#'/,\n                    end: /$/,\n                    excludeBegin: true,\n                  }\n                ]\n              }\n            },\n            {\n              // Handle `@param` to highlight the parameter name following\n              // after.\n              className: 'doctag',\n              begin: '@param',\n              end: /$/,\n              contains: [\n                {\n                  className: 'variable',\n                  variants: [\n                    { begin: IDENT_RE },\n                    { begin: /`(?:\\\\.|[^`])+`/ }\n                  ],\n                  endsParent: true\n                }\n              ]\n            },\n            {\n              className: 'doctag',\n              begin: /@[a-zA-Z]+/\n            },\n            {\n              className: 'meta-keyword',\n              begin: /\\\\[a-zA-Z]+/,\n            }\n          ]\n        }\n      ),\n\n      hljs.HASH_COMMENT_MODE,\n\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\(/, end: /\\)(-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\{/, end: /\\}(-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\[/, end: /\\](-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\(/, end: /\\)(-*)'/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\{/, end: /\\}(-*)'/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\[/, end: /\\](-*)'/ }),\n          {begin: '\"', end: '\"', relevance: 0},\n          {begin: \"'\", end: \"'\", relevance: 0}\n        ],\n      },\n      {\n        className: 'number',\n        variants: [\n          // TODO: replace with negative look-behind when available\n          // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\n          // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\n          // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\n\n          // The below rules all eat an extra character in front (for the\n          // look-behind check) and then exclude it from the match, but I think\n          // in many cases this will work out just fine.\n          {\n            // Special case: only hexadecimal binary powers can contain fractions.\n            begin: /([^a-zA-Z0-9._])(?=0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?)/,\n            end: /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\n            excludeBegin: true\n          },\n          {\n            begin: /([^a-zA-Z0-9._])(?=0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?)/,\n            end: /0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ ,\n            excludeBegin: true\n          },\n          {\n            begin: /([^a-zA-Z0-9._])(?=(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?)/,\n            end: /(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/,\n            excludeBegin: true\n          }\n        ],\n        // \"on:begin\": (match, response) => {\n        //   if (match.index > 0) {\n        //     let priorChar = match.input[match.index - 1];\n        //     if (priorChar.match(/[a-zA-Z0-9._]/)) response.ignoreMatch();\n        //   }\n        // },\n        relevance: 0\n      },\n\n      {\n        // infix operator\n        begin: '%',\n        end: '%'\n      },\n\n      {\n        // escaped identifier\n        begin: '`',\n        end: '`',\n        contains: [\n          { begin: /\\\\./ }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = r;\n","/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  var RUBY_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var RUBY_KEYWORDS = {\n    keyword:\n      'and then defined module in return redo if BEGIN retry end for self when ' +\n      'next until do begin unless END rescue else break undef not super class case ' +\n      'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor',\n    literal:\n      'true false nil'\n  };\n  var YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  var IRB_OBJECT = {\n    begin: '#<', end: '>'\n  };\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      {\n        contains: [YARDOCTAG]\n      }\n    ),\n    hljs.COMMENT(\n      '^\\\\=begin',\n      '^\\\\=end',\n      {\n        contains: [YARDOCTAG],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', '\\\\n$')\n  ];\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    keywords: RUBY_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /`/, end: /`/},\n      {begin: '%[qQwWx]?\\\\(', end: '\\\\)'},\n      {begin: '%[qQwWx]?\\\\[', end: '\\\\]'},\n      {begin: '%[qQwWx]?{', end: '}'},\n      {begin: '%[qQwWx]?<', end: '>'},\n      {begin: '%[qQwWx]?/', end: '/'},\n      {begin: '%[qQwWx]?%', end: '%'},\n      {begin: '%[qQwWx]?-', end: '-'},\n      {begin: '%[qQwWx]?\\\\|', end: '\\\\|'},\n      {\n        // \\B in the beginning suppresses recognition of ?-sequences where ?\n        // is the last character of a preceding identifier, as in: `func?4`\n        begin: /\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b/\n      },\n      { // heredocs\n        begin: /<<[-~]?'?(\\w+)(?:.|\\n)*?\\n\\s*\\1\\b/,\n        returnBegin: true,\n        contains: [\n          { begin: /<<[-~]?'?/ },\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/, end: /(\\w+)/,\n            contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          })\n        ]\n      }\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)', endsParent: true,\n    keywords: RUBY_KEYWORDS\n  };\n\n  var RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    IRB_OBJECT,\n    {\n      className: 'class',\n      beginKeywords: 'class module', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'}),\n        {\n          begin: '<\\\\s*',\n          contains: [{\n            begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE\n          }]\n        }\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'function',\n      beginKeywords: 'def', end: '$|;',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: RUBY_METHOD_RE}),\n        PARAMS\n      ].concat(COMMENT_MODES)\n    },\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::'\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [STRING, {begin: RUBY_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))' // variables\n    },\n    {\n      className: 'params',\n      begin: /\\|/, end: /\\|/,\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        IRB_OBJECT,\n        {\n          className: 'regexp',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          illegal: /\\n/,\n          variants: [\n            {begin: '/', end: '/[a-z]*'},\n            {begin: '%r{', end: '}[a-z]*'},\n            {begin: '%r\\\\(', end: '\\\\)[a-z]*'},\n            {begin: '%r!', end: '![a-z]*'},\n            {begin: '%r\\\\[', end: '\\\\][a-z]*'}\n          ]\n        }\n      ].concat(COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  var SIMPLE_PROMPT = \"[>?]>\";\n  var DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  var RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d(p\\\\d+)?[^>]+>\";\n\n  var IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta',\n      begin: '^('+SIMPLE_PROMPT+\"|\"+DEFAULT_PROMPT+'|'+RVM_PROMPT+')',\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  return {\n    name: 'Ruby',\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: COMMENT_MODES.concat(IRB_DEFAULT).concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;\n","/*\nLanguage: Shell Session\nRequires: bash.js\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nCategory: common\n*/\n\nfunction shell(hljs) {\n  return {\n    name: 'Shell Session',\n    aliases: ['console'],\n    contains: [\n      {\n        className: 'meta',\n        begin: '^\\\\s{0,3}[/\\\\w\\\\d\\\\[\\\\]()@-]*[>%$#]',\n        starts: {\n          end: '$', subLanguage: 'bash'\n        }\n      }\n    ]\n  }\n}\n\nmodule.exports = shell;\n","/*\n Language: SQL\n Contributors: Nikolay Lisienko <info@neor.ru>, Heiko August <post@auge8472.de>, Travis Odom <travis.a.odom@gmail.com>, Vadimtro <vadimtro@yahoo.com>, Benjamin Auder <benjamin.auder@gmail.com>\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common\n */\n\nfunction sql(hljs) {\n  var COMMENT_MODE = hljs.COMMENT('--', '$');\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    illegal: /[<>{}*]/,\n    contains: [\n      {\n        beginKeywords:\n          'begin end start commit rollback savepoint lock alter create drop rename call ' +\n          'delete do handler insert load replace select truncate update set show pragma grant ' +\n          'merge describe use explain help declare prepare execute deallocate release ' +\n          'unlock purge reset change stop analyze cache flush optimize repair kill ' +\n          'install uninstall checksum restore check backup revoke comment values with',\n        end: /;/, endsWithParent: true,\n        keywords: {\n          $pattern: /[\\w\\.]+/,\n          keyword:\n            'as abort abs absolute acc acce accep accept access accessed accessible account acos action activate add ' +\n            'addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias ' +\n            'all allocate allow alter always analyze ancillary and anti any anydata anydataset anyschema anytype apply ' +\n            'archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan ' +\n            'atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid ' +\n            'authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile ' +\n            'before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float ' +\n            'binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound ' +\n            'bucket buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel ' +\n            'capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base ' +\n            'char_length character_length characters characterset charindex charset charsetform charsetid check ' +\n            'checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close ' +\n            'cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation ' +\n            'collect colu colum column column_value columns columns_updated comment commit compact compatibility ' +\n            'compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn ' +\n            'connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection ' +\n            'consider consistent constant constraint constraints constructor container content contents context ' +\n            'contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost ' +\n            'count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation ' +\n            'critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user ' +\n            'cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add ' +\n            'date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts ' +\n            'day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate ' +\n            'declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults ' +\n            'deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank ' +\n            'depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor ' +\n            'deterministic diagnostics difference dimension direct_load directory disable disable_all ' +\n            'disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div ' +\n            'do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable ' +\n            'editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt ' +\n            'end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors ' +\n            'escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding ' +\n            'execu execut execute exempt exists exit exp expire explain explode export export_set extended extent external ' +\n            'external_1 external_2 externally extract failed failed_login_attempts failover failure far fast ' +\n            'feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final ' +\n            'finish first first_value fixed flash_cache flashback floor flush following follows for forall force foreign ' +\n            'form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ' +\n            'ftp full function general generated get get_format get_lock getdate getutcdate global global_name ' +\n            'globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups ' +\n            'gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex ' +\n            'hierarchy high high_priority hosts hour hours http id ident_current ident_incr ident_seed identified ' +\n            'identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment ' +\n            'index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile ' +\n            'initial initialized initially initrans inmemory inner innodb input insert install instance instantiable ' +\n            'instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat ' +\n            'is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists ' +\n            'keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lateral lax lcase ' +\n            'lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit ' +\n            'lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate ' +\n            'locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call ' +\n            'logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime ' +\n            'managed management manual map mapping mask master master_pos_wait match matched materialized max ' +\n            'maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans ' +\n            'md5 measures median medium member memcompress memory merge microsecond mid migration min minextents ' +\n            'minimum mining minus minute minutes minvalue missing mod mode model modification modify module monitoring month ' +\n            'months mount move movement multiset mutex name name_const names nan national native natural nav nchar ' +\n            'nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile ' +\n            'nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile ' +\n            'nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder ' +\n            'nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck ' +\n            'noswitch not nothing notice notnull notrim novalidate now nowait nth_value nullif nulls num numb numbe ' +\n            'nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ' +\n            'ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old ' +\n            'on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date ' +\n            'oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary ' +\n            'out outer outfile outline output over overflow overriding package pad parallel parallel_enable ' +\n            'parameters parent parse partial partition partitions pascal passing password password_grace_time ' +\n            'password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex ' +\n            'pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc ' +\n            'performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin ' +\n            'policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction ' +\n            'prediction_cost prediction_details prediction_probability prediction_set prepare present preserve ' +\n            'prior priority private private_sga privileges procedural procedure procedure_analyze processlist ' +\n            'profiles project prompt protection public publishingservername purge quarter query quick quiesce quota ' +\n            'quotename radians raise rand range rank raw read reads readsize rebuild record records ' +\n            'recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh ' +\n            'regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy ' +\n            'reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename ' +\n            'repair repeat replace replicate replication required reset resetlogs resize resource respect restore ' +\n            'restricted result result_cache resumable resume retention return returning returns reuse reverse revoke ' +\n            'right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows ' +\n            'rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll ' +\n            'sdo_georaster sdo_topo_geometry search sec_to_time second seconds section securefile security seed segment select ' +\n            'self semi sequence sequential serializable server servererror session session_user sessions_per_user set ' +\n            'sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor ' +\n            'si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin ' +\n            'size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex ' +\n            'source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows ' +\n            'sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone ' +\n            'standby start starting startup statement static statistics stats_binomial_test stats_crosstab ' +\n            'stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep ' +\n            'stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev ' +\n            'stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate ' +\n            'subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum ' +\n            'suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate ' +\n            'sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tablesample tan tdo ' +\n            'template temporary terminated tertiary_weights test than then thread through tier ties time time_format ' +\n            'time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr ' +\n            'timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking ' +\n            'transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate ' +\n            'try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress ' +\n            'under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unnest unpivot ' +\n            'unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert ' +\n            'url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date ' +\n            'utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var ' +\n            'var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray ' +\n            'verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear ' +\n            'wellformed when whene whenev wheneve whenever where while whitespace window with within without work wrapped ' +\n            'xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces ' +\n            'xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek',\n          literal:\n            'true false null unknown',\n          built_in:\n            'array bigint binary bit blob bool boolean char character date dec decimal float int int8 integer interval number ' +\n            'numeric real record serial serial8 smallint text time timestamp tinyint varchar varchar2 varying void'\n        },\n        contains: [\n          {\n            className: 'string',\n            begin: '\\'', end: '\\'',\n            contains: [{begin: '\\'\\''}]\n          },\n          {\n            className: 'string',\n            begin: '\"', end: '\"',\n            contains: [{begin: '\"\"'}]\n          },\n          {\n            className: 'string',\n            begin: '`', end: '`'\n          },\n          hljs.C_NUMBER_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          COMMENT_MODE,\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      hljs.HASH_COMMENT_MODE\n    ]\n  };\n}\n\nmodule.exports = sql;\n","/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\n*/\n\nfunction xml(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var XML_ENTITIES = {\n    className: 'symbol',\n    begin: '&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;'\n  };\n  var XML_META_KEYWORDS = {\n\t  begin: '\\\\s',\n\t  contains:[\n\t    {\n\t      className: 'meta-keyword',\n\t      begin: '#?[a-z_][a-z1-9_-]+',\n\t      illegal: '\\\\n',\n      }\n\t  ]\n  };\n  var XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {begin: '\\\\(', end: '\\\\)'});\n  var APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {className: 'meta-string'});\n  var QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'});\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/, contains: [XML_ENTITIES]},\n              {begin: /'/, end: /'/, contains: [XML_ENTITIES]},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<![a-z]', end: '>',\n        relevance: 10,\n        contains: [\n\t\t\t\t  XML_META_KEYWORDS,\n\t\t\t\t  QUOTE_META_STRING_MODE,\n\t\t\t\t  APOS_META_STRING_MODE,\n\t\t\t\t\tXML_META_PAR_KEYWORDS,\n\t\t\t\t\t{\n\t\t\t\t\t  begin: '\\\\[', end: '\\\\]',\n\t\t\t\t\t  contains:[\n\t\t\t\t\t\t  {\n\t\t\t\t\t      className: 'meta',\n\t\t\t\t\t      begin: '<![a-z]', end: '>',\n\t\t\t\t\t      contains: [\n\t\t\t\t\t        XML_META_KEYWORDS,\n\t\t\t\t\t        XML_META_PAR_KEYWORDS,\n\t\t\t\t\t        QUOTE_META_STRING_MODE,\n\t\t\t\t\t        APOS_META_STRING_MODE\n\t\t\t\t\t\t    ]\n\t\t\t        }\n\t\t\t\t\t  ]\n\t\t\t\t  }\n\t\t\t\t]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n","/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  var LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  var URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\\\\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  var KEY = {\n    className: 'attr',\n    variants: [\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n      { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' }, // double quoted keys\n      { begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' } // single quoted keys\n    ]\n  };\n\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { begin: '{{', end: '}}' }, // jinja templates Ansible\n      { begin: '%{', end: '}' } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      { begin: /'/, end: /'/ },\n      { begin: /\"/, end: /\"/ },\n      { begin: /\\S+/ }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  var CONTAINER_STRING = hljs.inherit(STRING, {\n    variants: [\n      { begin: /'/, end: /'/ },\n      { begin: /\"/, end: /\"/ },\n      { begin: /[^\\s,{}[\\]]+/ }\n    ]\n  });\n\n  var DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  var TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  var FRACTION_RE = '(\\\\.[0-9]*)?';\n  var ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  var TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  var VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    contains: [],\n    keywords: LITERALS,\n    relevance: 0\n  };\n  var OBJECT = {\n    begin: '{',\n    end: '}',\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  var ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  var MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([0-9]?[+-])?[ ]*\\\\n( *)[\\\\S ]+\\\\n(\\\\2[\\\\S ]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '\\\\-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: { literal: LITERALS }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b'\n    },\n    OBJECT,\n    ARRAY,\n    STRING\n  ];\n\n  var VALUE_MODES = [...MODES];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: ['yml', 'YAML'],\n    contains: MODES\n  };\n}\n\nmodule.exports = yaml;\n"],"sourceRoot":""}